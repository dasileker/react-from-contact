{"ast":null,"code":"import { isHTMLElement } from \"./instanceOf.js\";\nvar round = Math.round;\nexport default function getBoundingClientRect(element, includeScale) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  var rect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1;\n  if (isHTMLElement(element) && includeScale) {\n    var offsetHeight = element.offsetHeight;\n    var offsetWidth = element.offsetWidth; // Do not attempt to divide by 0, otherwise we get `Infinity` as scale\n    // Fallback to 1 in case both values are `0`\n\n    if (offsetWidth > 0) {\n      scaleX = rect.width / offsetWidth || 1;\n    }\n    if (offsetHeight > 0) {\n      scaleY = rect.height / offsetHeight || 1;\n    }\n  }\n  return {\n    width: round(rect.width / scaleX),\n    height: round(rect.height / scaleY),\n    top: round(rect.top / scaleY),\n    right: round(rect.right / scaleX),\n    bottom: round(rect.bottom / scaleY),\n    left: round(rect.left / scaleX),\n    x: round(rect.left / scaleX),\n    y: round(rect.top / scaleY)\n  };\n}","map":{"version":3,"names":["isHTMLElement","round","Math","getBoundingClientRect","element","includeScale","rect","scaleX","scaleY","offsetHeight","offsetWidth","width","height","top","right","bottom","left","x","y"],"sources":["/home/amine/react-from-contact/node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js"],"sourcesContent":["import { isHTMLElement } from \"./instanceOf.js\";\nvar round = Math.round;\nexport default function getBoundingClientRect(element, includeScale) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  var rect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1;\n\n  if (isHTMLElement(element) && includeScale) {\n    var offsetHeight = element.offsetHeight;\n    var offsetWidth = element.offsetWidth; // Do not attempt to divide by 0, otherwise we get `Infinity` as scale\n    // Fallback to 1 in case both values are `0`\n\n    if (offsetWidth > 0) {\n      scaleX = rect.width / offsetWidth || 1;\n    }\n\n    if (offsetHeight > 0) {\n      scaleY = rect.height / offsetHeight || 1;\n    }\n  }\n\n  return {\n    width: round(rect.width / scaleX),\n    height: round(rect.height / scaleY),\n    top: round(rect.top / scaleY),\n    right: round(rect.right / scaleX),\n    bottom: round(rect.bottom / scaleY),\n    left: round(rect.left / scaleX),\n    x: round(rect.left / scaleX),\n    y: round(rect.top / scaleY)\n  };\n}"],"mappings":"AAAA,SAASA,aAAa,QAAQ,iBAAiB;AAC/C,IAAIC,KAAK,GAAGC,IAAI,CAACD,KAAK;AACtB,eAAe,SAASE,qBAAqB,CAACC,OAAO,EAAEC,YAAY,EAAE;EACnE,IAAIA,YAAY,KAAK,KAAK,CAAC,EAAE;IAC3BA,YAAY,GAAG,KAAK;EACtB;EAEA,IAAIC,IAAI,GAAGF,OAAO,CAACD,qBAAqB,EAAE;EAC1C,IAAII,MAAM,GAAG,CAAC;EACd,IAAIC,MAAM,GAAG,CAAC;EAEd,IAAIR,aAAa,CAACI,OAAO,CAAC,IAAIC,YAAY,EAAE;IAC1C,IAAII,YAAY,GAAGL,OAAO,CAACK,YAAY;IACvC,IAAIC,WAAW,GAAGN,OAAO,CAACM,WAAW,CAAC,CAAC;IACvC;;IAEA,IAAIA,WAAW,GAAG,CAAC,EAAE;MACnBH,MAAM,GAAGD,IAAI,CAACK,KAAK,GAAGD,WAAW,IAAI,CAAC;IACxC;IAEA,IAAID,YAAY,GAAG,CAAC,EAAE;MACpBD,MAAM,GAAGF,IAAI,CAACM,MAAM,GAAGH,YAAY,IAAI,CAAC;IAC1C;EACF;EAEA,OAAO;IACLE,KAAK,EAAEV,KAAK,CAACK,IAAI,CAACK,KAAK,GAAGJ,MAAM,CAAC;IACjCK,MAAM,EAAEX,KAAK,CAACK,IAAI,CAACM,MAAM,GAAGJ,MAAM,CAAC;IACnCK,GAAG,EAAEZ,KAAK,CAACK,IAAI,CAACO,GAAG,GAAGL,MAAM,CAAC;IAC7BM,KAAK,EAAEb,KAAK,CAACK,IAAI,CAACQ,KAAK,GAAGP,MAAM,CAAC;IACjCQ,MAAM,EAAEd,KAAK,CAACK,IAAI,CAACS,MAAM,GAAGP,MAAM,CAAC;IACnCQ,IAAI,EAAEf,KAAK,CAACK,IAAI,CAACU,IAAI,GAAGT,MAAM,CAAC;IAC/BU,CAAC,EAAEhB,KAAK,CAACK,IAAI,CAACU,IAAI,GAAGT,MAAM,CAAC;IAC5BW,CAAC,EAAEjB,KAAK,CAACK,IAAI,CAACO,GAAG,GAAGL,MAAM;EAC5B,CAAC;AACH"},"metadata":{},"sourceType":"module"}